{"body":"Flawless\r\n========\r\n\r\nFlawless is a simple Python framework developed at shopkick for detecting bugs in a production\r\nenvironment. Flawless traps exceptions and then uses git blame to send an email to the developer responsible for causing the exception.\r\n\r\nAt shopkick, we've found Flawless has been an invaluable tool for detecting new bugs within a matter of minutes after a code push.\r\n\r\nSource Code: [https://github.com/shopkick/flawless](https://github.com/shopkick/flawless)\r\n\r\n\r\nHow it Works\r\n------------\r\n\r\nThe Flawless client wraps your code with a try/except block. When an exception is caught it then\r\nsends the entire traceback to the Flawless server. The Flawless server then aggregates exception\r\nreports from clients and figures out which line of code caused the exception. Once the line that\r\ncaused the exception is identified, Flawless runs \"git blame\" to determine the email address of\r\nthe developer that last touched that line of code. Flawless then sends the developer an email with\r\nthe traceback.\r\n\r\nExceptions can be whitelisted if they are expected. To whitelist an exception you must specify\r\nthe filename, function name, and the text from the line of code being whitelisted in the appropriate\r\nconfig file. Alternatively, exception emails include a link to automatically add an exception to\r\nthe whitelist. It is possible to whitelist all exceptions from a particular function by leaving the\r\nline of code text blank. Likewise, an entire file can be whitelisted by leaving the line of code and\r\nfunction blank.\r\n\r\n\r\n4 Step Setup Guide\r\n------------------\r\n\r\n1. Install Flawless. After this step you should have an executable named flawless in your path.\r\n\r\n    `$> python setup.py install`\r\n\r\n2. Setup the Flawless server. Go to the server which you want to host the Flawless backend. Then\r\nuse the following command to start a short questionnaire to setup the server.\r\n\r\n   `$> flawless configure`\r\n\r\n3. Start the Flawless server\r\n\r\n   `$> flawless start -conf path/to/flawless.cfg`\r\n\r\n4. Integrate the Flawless client into your code. If you are running a WSGI application such as\r\ndjango or pylons/pyramid, simply add the flawless.client.middleware to your application. Otherwise\r\nyou can wrap particular functions or entire classes by using flawless.client.decorators. View the\r\nexamples directory for some actual code examples.    \r\n\r\n> Tip: Edit flawless.client.default.py and set the default host:port for your Flawless server\r\n\r\n\r\nServer User Interface\r\n---------------------\r\n\r\n**/get\\_weekly\\_error\\_report** - Shows all errors that happened this week. Uses a leaderboard style format to show the developer responsible for causing the most errors.\r\n\r\n    Parameters:\r\n      timestamp (optional) - Specify which week you want to view. Default is the\r\n                             current week.\r\n      include_known_errors (optional) - Include errors from config/known_errors.\r\n                                        Default is False.\r\n\r\n**/check\\_health** - Check if the server is up and running. Also displays server's configuration\r\nparameters\r\n\r\n**/add\\_known\\_error** - Webpage in which you can whitelist errors\r\n\r\n**/view\\_traceback** - View the most recent traceback for a particular error\r\n\r\n    Parameters:\r\n      filename (required) - Specify the filename in which the error occurred\r\n      function_name (required) - Specify the name of the function in which the\r\n                                 error occurred\r\n      line_number (required) - Specify the line number on which the error\r\n                               occurred\r\n      text (required) - Specify the full text that appears on line_number\r\n      timestamp (optional) - Specify which week you want to view. Default\r\n                             is the current week.\r\n\r\n\r\nConfiguration Files Reference\r\n-----------------------------\r\n\r\n**config/building\\_blocks:** This is a list of library code functions that can raise an exception.\r\nAdding an entry here causes the blame to be transferred to the caller of the library\r\nrather than blaming the author of the library. See file for example.\r\n\r\n    Fields:\r\n      filename - The path to the file being whitelisted (not including\r\n                 the site-packages directory)\r\n      function_name - The name of the function being whitelisted. This value\r\n                      can be set to None to act as a wildcard.\r\n      code_fragment - The actual text from the line of code being\r\n                      whitelisted. This value can be set to None to act\r\n                      as a wildcard.\r\n\r\n\r\n**config/known\\_errors:** This is a list of known errors that happen. Reporting can be customized to\r\ncompletely ignore the error, to only alert after a minimum number of occurrences; or to alert every\r\nN occurences. See file for example.\r\n\r\n    Fields:\r\n      filename - The path to the file being whitelisted (not including\r\n                 the site-packages directory)\r\n      function_name - The name of the function being whitelisted. This\r\n                      value can be set to None to act as a wildcard.\r\n      code_fragment - The actual text from the line of code being\r\n                      whitelisted. This value can be set to None to\r\n                      act as a wildcard.\r\n      min_alert_threshold - (optional) The minimum number of occurrences\r\n                            before Flawless will report this error.\r\n      max_alert_threshold - (optional) The maximum number of occurrences\r\n                            before Flawless will stop reporting this error\r\n      alert_every_n_occurences - (optional) Flawless will report this error\r\n                                 every N occurrences\r\n      email_recipients - (optional) List of email addresses to include on\r\n                         error reports for this error\r\n      email_header - (optional) Extra text to place at the top of emails\r\n                     for this error\r\n\r\n\r\n**config/third\\_party\\_whitelist:** This is a list of errors that can be generated by thirdparty\r\nlibraries that should be completely ignored (ex: network connection errors). See file for example.\r\n\r\n    Fields:\r\n      filename - The path to the file being whitelisted (not including\r\n                 the site-packages directory)\r\n      function_name - The name of the function being whitelisted. This\r\n                      value can be set to None to act as a wildcard.\r\n      code_fragment - The actual text from the line of code being\r\n                      whitelisted. This value can be set to None to act\r\n                      as a wildcard\r\n\r\n\r\n**config/watched\\_files:** This file allows developers to receive all alerts for errors related to\r\na particular file. They can either register to receive any exception containing the file in the\r\nstacktrace, or to only receive alerts when the file is blamed for the exception. See file for\r\nexample.\r\n\r\n    Fields:\r\n      email - Email address of the watcher\r\n      filepath - The path to the file being watched\r\n      watch_all_errors - If true, any exception that gets reported and\r\n                         contains this file in it's traceback will be\r\n                         sent to the watcher. If false, the watcher will\r\n                         only receive reports for which a line in the file\r\n                         was actually blamed for causing the error\r\n\r\n\r\n**config/email\\_remapping:** Remap a developer's email address that is returned by git-blame to\r\ninstead be mapped to a different email address. See file for example.\r\n\r\n    Fields:\r\n      remap - The email address that is being remapped\r\n      to - The email address that should actually receive the\r\n           error reports\r\n\r\n\r\n**config/flawless.cfg:** Contains all the configuration settings for the Flawless server. To view a\r\nlist of configuration options, run the following command.\r\n\r\n    $> flawless options\r\n\r\n### Authors and Contributors\r\n@jwegan\r\n\r\n### Support or Contact\r\nHaving trouble with Flawless? Check out the documentation or contact opensource@shopkick.com and weâ€™ll help you sort it out.","tagline":"A simple Python framework to catch exceptions and report them via email","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Flawless","google":"UA-36570089-2"}